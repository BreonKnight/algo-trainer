{
  "pseudocode": "// Build segment tree\n\nSEGMENT-TREE-BUILD(A, v, tl, tr)\n    if tl = tr then\n        T[v] ← A[tl]\n    else\n        tm ← ⌊(tl + tr)/2⌋\n        SEGMENT-TREE-BUILD(A, 2*v, tl, tm)\n        SEGMENT-TREE-BUILD(A, 2*v+1, tm+1, tr)\n        T[v] ← T[2*v] + T[2*v+1]\n    end if\n\n//Query range sum\nSEGMENT-TREE-QUERY(v, tl, tr, l, r)\n    if l > r then\n        return 0\n    end if\n    if l = tl and r = tr then\n        return T[v]\n    end if\n    tm ← ⌊(tl + tr)/2⌋\n    return SEGMENT-TREE-QUERY(2*v, tl, tm, l, min(r, tm)) +\n           SEGMENT-TREE-QUERY(2*v+1, tm+1, tr, max(l, tm+1), r)\n\n// Update value at index\nSEGMENT-TREE-UPDATE(v, tl, tr, pos, new_val)\n    if tl = tr then\n        T[v] ← new_val\n    else\n        tm ← ⌊(tl + tr)/2⌋\n        if pos ≤ tm then\n            SEGMENT-TREE-UPDATE(2*v, tl, tm, pos, new_val)\n        else\n            SEGMENT-TREE-UPDATE(2*v+1, tm+1, tr, pos, new_val)\n        end if\n        T[v] ← T[2*v] + T[2*v+1]\n    end if\n\n// Lazy update\nSEGMENT-TREE-LAZY-UPDATE(v, tl, tr, l, r, addend)\n    PUSH(v, tl, tr)\n    if l > r then\n        return\n    end if\n    if l = tl and r = tr then\n        lazy[v] ← lazy[v] + addend\n        PUSH(v, tl, tr)\n    else\n        tm ← ⌊(tl + tr)/2⌋\n        SEGMENT-TREE-LAZY-UPDATE(2*v, tl, tm, l, min(r, tm), addend)\n        SEGMENT-TREE-LAZY-UPDATE(2*v+1, tm+1, tr, max(l, tm+1), r, addend)\n        T[v] ← T[2*v] + T[2*v+1]\n    end if\n\n// Push operation for lazy propagation\nPUSH(v, tl, tr)\n    if lazy[v] ≠ 0 then\n        T[v] ← T[v] + lazy[v] * (tr - tl + 1)\n        if tl ≠ tr then\n            lazy[2*v] ← lazy[2*v] + lazy[v]\n            lazy[2*v+1] ← lazy[2*v+1] + lazy[v]\n        end if\n        lazy[v] ← 0\n    end if\n\n// Example:\n// Input: A = [1, 3, -2, 8, -7]\n//\n// Build tree:\n//       3\n//     /   \\\n//   2      1\n//  / \\    / \\\n// 1   3  -2  1\n//1 3 -2 8 -7 0 0 0\n//\n// Query [1,3]: 3 + (-2) + 8 = 9\n// Update pos 2 to 5: [1, 3, 5, 8, -7]\n// Range update [1,3] add 2: [1, 5, 7, 10, -7]"
}
